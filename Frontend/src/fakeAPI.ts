import { Files, Repositories } from "@/Types";

const repositories: Repositories = [
  {
    id: 1,
    name: "QuantumVault",
    url: "github.com/user/QuantumVault",
    status: "clean",
    platform: "github",
    date: new Date("2021-10-10T10:10:10Z"),
  },
  {
    id: 2,
    name: "CyberByteHub",
    url: "gitea.com/user/CyberByteHub",
    status: "clean",
    platform: "gitea",
    date: new Date("2021-10-12T10:10:10Z"),
  },
  {
    id: 3,
    name: "StellarSync",
    url: "github.com/user/StellarSync",
    status: "vulnerable",
    platform: "github",
    date: new Date("2021-10-14T10:10:10Z"),
  },
  {
    id: 4,
    name: "CodeCrazeLab",
    url: "gitlab.com/user/CodeCrazeLab",
    status: "vulnerable",
    platform: "gitlab",
    date: new Date("2021-10-16T10:10:10Z"),
  },
  {
    id: 5,
    name: "NexusForge",
    url: "bitbucket.com/user/NexusForge",
    status: "running",
    platform: "bitbucket",
    date: new Date("2023-10-18T10:10:10Z"),
  },
  {
    id: 6,
    name: "ByteBlitzInc",
    url: "github.com/user/ByteBlitzInc",
    status: "clean",
    platform: "github",
    date: new Date("2021-10-20T10:10:10Z"),
  },
  {
    id: 7,
    name: "CloudCipherRepo",
    url: "gitlab.com/user/CloudCipherRepo",
    status: "clean",
    platform: "gitlab",
    date: new Date("2021-10-22T10:10:10Z"),
  },
  {
    id: 8,
    name: "DataNinjaDen",
    url: "github.com/user/DataNinjaDen",
    status: "vulnerable",
    platform: "github",
    date: new Date("2021-10-24T10:10:10Z"),
  },
  {
    id: 9,
    name: "PulseParseHub",
    url: "github.com/user/PulseParseHub",
    status: "clean",
    platform: "github",
    date: new Date("2021-10-26T10:10:10Z"),
  },
  {
    id: 10,
    name: "InfinityInnovate",
    url: "bitbucket.com/user/InfinityInnovate",
    status: "vulnerable",
    platform: "bitbucket",
    date: new Date("2021-09-16T10:10:10Z"),
  },
  {
    id: 11,
    name: "FusionFrameWorks",
    url: "gitea.com/user/FusionFrameWorks",
    status: "clean",
    platform: "gitea",
    date: new Date("2021-09-26T10:10:10Z"),
  },
  {
    id: 12,
    name: "SparkStreamRepo",
    url: "gitea.com/user/SparkStreamRepo",
    status: "clean",
    platform: "gitea",
    date: new Date("2021-06-11T10:10:10Z"),
  },
  {
    id: 13,
    name: "TechTroveVault",
    url: "gitlab.com/user/TechTroveVault",
    status: "clean",
    platform: "gitlab",
    date: new Date("2021-10-26T10:12:10Z"),
  },
  {
    id: 14,
    name: "BitBoltBase",
    url: "bitbucket.com/user/BitBoltBase",
    status: "vulnerable",
    platform: "bitbucket",
    date: new Date("2021-10-26T04:10:10Z"),
  },
  {
    id: 15,
    name: "NeuralNook",
    url: "bitbucket.com/user/NeuralNook",
    status: "clean",
    platform: "bitbucket",
    date: new Date("2021-10-26T20:10:10Z"),
  },
  {
    id: 16,
    name: "QuantumQuarry",
    url: "gitlab.com/user/QuantumQuarry",
    status: "clean",
    platform: "gitlab",
    date: new Date("2021-10-26T10:10:10Z"),
  },
  {
    id: 17,
    name: "EchoEngineRepo",
    url: "github.com/user/EchoEngineRepo",
    status: "clean",
    platform: "github",
    date: new Date("2020-10-26T10:10:10Z"),
  },
  {
    id: 18,
    name: "CipherSprintHub",
    url: "github.com/user/CipherSprintHub",
    status: "vulnerable",
    platform: "github",
    date: new Date("2021-10-26T15:10:10Z"),
  },
  {
    id: 19,
    name: "CodeCraftWorks",
    url: "gitea.com/user/CodeCraftWorks",
    status: "vulnerable",
    platform: "gitea",
    date: new Date("2021-11-20T10:10:10Z"),
  },
  {
    id: 20,
    name: "AlphaAlgorithmRepo",
    url: "gitlab.com/user/AlphaAlgorithmRepo",
    status: "clean",
    platform: "gitlab",
    date: new Date("2021-10-14T11:10:10Z"),
  },
];

const files: Files = [
  {
    id: 1,
    path: "src/handler/",
    name: "main",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 2,
    path: "src/handler/",
    name: "utility",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 3,
    path: "src/handler/",
    name: "test",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 4,
    path: "src/handler/",
    name: "data",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 5,
    path: "src/handler/",
    name: "gui",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 6,
    path: "src/handler/",
    name: "network",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 7,
    path: "src/handler/",
    name: "math",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 8,
    path: "src/handler/",
    name: "image",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 9,
    path: "src/handler/",
    name: "audio",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 10,
    path: "src/handler/",
    name: "store",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 11,
    path: "src/handler/",
    name: "write",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 12,
    path: "src/handler/",
    name: "handle",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 13,
    path: "src/handler/",
    name: "server",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 14,
    path: "src/handler/",
    name: "send",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 15,
    path: "src/handler/",
    name: "read",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 16,
    path: "src/handler/",
    name: "reset",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 17,
    path: "src/handler/",
    name: "replace",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 18,
    path: "src/handler/",
    name: "calculate",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 19,
    path: "src/handler/",
    name: "reload",
    extension: "cpp",
    date: new Date(),
  },
  {
    id: 20,
    path: "src/handler/",
    name: "config",
    extension: "cpp",
    date: new Date(),
  },
];

const repositoryFiles: number[][] = [
  [3, 1],
  [3, 2],
  [3, 3],
  [3, 4],
  [4, 5],
  [4, 6],
  [4, 7],
  [8, 8],
  [8, 9],
  [10, 10],
  [10, 11],
  [10, 12],
  [14, 13],
  [14, 14],
  [14, 15],
  [18, 16],
  [18, 17],
  [19, 18],
  [19, 19],
  [19, 20],
];

export const getRepositories = (): Repositories => {
  return repositories;
};

export const getFiles = (id: number) => {
  const fileIds = repositoryFiles
    .filter(file => file[0] === id)
    .map(file => file[1]);
  return files.filter(file => fileIds.includes(file.id));
};
